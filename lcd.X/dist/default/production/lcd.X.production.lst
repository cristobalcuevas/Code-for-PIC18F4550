

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 29 00:53:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _LATD	set	3980
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISDbits	set	3989
    58                           
    59                           	psect	smallconst
    60  000800                     __psmallconst:
    61                           	callstack 0
    62  000800  00                 	db	0
    63  000801                     STR_1:
    64  000801  48                 	db	72	;'H'
    65  000802  6F                 	db	111	;'o'
    66  000803  6C                 	db	108	;'l'
    67  000804  61                 	db	97	;'a'
    68  000805  20                 	db	32
    69  000806  6D                 	db	109	;'m'
    70  000807  75                 	db	117	;'u'
    71  000808  6E                 	db	110	;'n'
    72  000809  64                 	db	100	;'d'
    73  00080A  6F                 	db	111	;'o'
    74  00080B  00                 	db	0
    75  00080C  00                 	db	0	; dummy byte at the end
    76  0000                     
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80  0009D0                     __pcinit:
    81                           	callstack 0
    82  0009D0                     start_initialization:
    83                           	callstack 0
    84  0009D0                     __initialization:
    85                           	callstack 0
    86  0009D0                     end_of_initialization:
    87                           	callstack 0
    88  0009D0                     __end_of__initialization:
    89                           	callstack 0
    90  0009D0  0E00               	movlw	low (__Lsmallconst shr (0+16))
    91  0009D2  6EF8               	movwf	tblptru,c
    92  0009D4  0E08               	movlw	high __Lsmallconst
    93  0009D6  6EF7               	movwf	tblptrh,c
    94  0009D8  0100               	movlb	0
    95  0009DA  EF07  F004         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMRAM
    98  000001                     __pcstackCOMRAM:
    99                           	callstack 0
   100  000001                     selectorRegistro@rs:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x0
   104  000001                     	ds	2
   105  000003                     ??_selectorRegistro:
   106                           
   107                           ; 1 bytes @ 0x2
   108  000003                     	ds	1
   109  000004                     lcd_Comando@cmd:
   110                           	callstack 0
   111  000004                     lcd_Caracter@dat:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x3
   115  000004                     	ds	1
   116  000005                     ??_lcd_Init:
   117  000005                     lcd_XY@x:
   118                           	callstack 0
   119  000005                     lcd_Cadena@pal:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x4
   123  000005                     	ds	2
   124  000007                     lcd_XY@y:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x6
   128  000007                     	ds	2
   129  000009                     
   130                           ; 1 bytes @ 0x8
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 12 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   150 ;;      Params:         0       0       0       0       0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0
   152 ;;      Temps:          0       0       0       0       0       0       0       0       0
   153 ;;      Totals:         0       0       0       0       0       0       0       0       0
   154 ;;Total ram usage:        0 bytes
   155 ;; Hardware stack levels required when called: 3
   156 ;; This function calls:
   157 ;;		_lcd_Cadena
   158 ;;		_lcd_Caracter
   159 ;;		_lcd_Init
   160 ;;		_lcd_XY
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167  00080E                     __ptext0:
   168                           	callstack 0
   169  00080E                     _main:
   170                           	callstack 28
   171  00080E                     
   172                           ;main.c: 13:     TRISDbits.RD0 = 0;
   173  00080E  9095               	bcf	149,0,c	;volatile
   174  000810                     
   175                           ;main.c: 14:     lcd_Init();
   176  000810  EC38  F004         	call	_lcd_Init	;wreg free
   177                           
   178                           ;main.c: 15:     lcd_XY(1,8);
   179  000814  0E00               	movlw	0
   180  000816  6E06               	movwf	(lcd_XY@x+1)^0,c
   181  000818  0E01               	movlw	1
   182  00081A  6E05               	movwf	lcd_XY@x^0,c
   183  00081C  0E00               	movlw	0
   184  00081E  6E08               	movwf	(lcd_XY@y+1)^0,c
   185  000820  0E08               	movlw	8
   186  000822  6E07               	movwf	lcd_XY@y^0,c
   187  000824  ECD0  F004         	call	_lcd_XY	;wreg free
   188                           
   189                           ;main.c: 16:     lcd_Caracter('W');
   190  000828  0E57               	movlw	87
   191  00082A  ECB7  F004         	call	_lcd_Caracter
   192                           
   193                           ;main.c: 17:     lcd_XY(1,0);
   194  00082E  0E00               	movlw	0
   195  000830  6E06               	movwf	(lcd_XY@x+1)^0,c
   196  000832  0E01               	movlw	1
   197  000834  6E05               	movwf	lcd_XY@x^0,c
   198  000836  0E00               	movlw	0
   199  000838  6E08               	movwf	(lcd_XY@y+1)^0,c
   200  00083A  0E00               	movlw	0
   201  00083C  6E07               	movwf	lcd_XY@y^0,c
   202  00083E  ECD0  F004         	call	_lcd_XY	;wreg free
   203                           
   204                           ;main.c: 18:     lcd_Caracter('e');
   205  000842  0E65               	movlw	101
   206  000844  ECB7  F004         	call	_lcd_Caracter
   207                           
   208                           ;main.c: 19:     lcd_XY(0,0);
   209  000848  0E00               	movlw	0
   210  00084A  6E06               	movwf	(lcd_XY@x+1)^0,c
   211  00084C  0E00               	movlw	0
   212  00084E  6E05               	movwf	lcd_XY@x^0,c
   213  000850  0E00               	movlw	0
   214  000852  6E08               	movwf	(lcd_XY@y+1)^0,c
   215  000854  0E00               	movlw	0
   216  000856  6E07               	movwf	lcd_XY@y^0,c
   217  000858  ECD0  F004         	call	_lcd_XY	;wreg free
   218  00085C                     
   219                           ;main.c: 20:     lcd_Cadena("Hola mundo");
   220  00085C  0E01               	movlw	low STR_1
   221  00085E  6E05               	movwf	lcd_Cadena@pal^0,c
   222  000860  0E08               	movlw	high STR_1
   223  000862  6E06               	movwf	(lcd_Cadena@pal+1)^0,c
   224  000864  EC83  F004         	call	_lcd_Cadena	;wreg free
   225  000868                     l15:
   226  000868  EF34  F004         	goto	l15
   227  00086C  EF00  F000         	goto	start
   228  000870                     __end_of_main:
   229                           	callstack 0
   230                           
   231 ;; *************** function _lcd_XY *****************
   232 ;; Defined at:
   233 ;;		line 28 in file "lcd_libreria.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;  x               2    4[COMRAM] int 
   236 ;;  y               2    6[COMRAM] int 
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   248 ;;      Params:         4       0       0       0       0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0
   251 ;;      Totals:         4       0       0       0       0       0       0       0       0
   252 ;;Total ram usage:        4 bytes
   253 ;; Hardware stack levels used: 1
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_lcd_Comando
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263  0009A0                     __ptext1:
   264                           	callstack 0
   265  0009A0                     _lcd_XY:
   266                           	callstack 28
   267  0009A0                     
   268                           ;lcd_libreria.c: 29:     if(x > 0){
   269  0009A0  BE06               	btfsc	(lcd_XY@x+1)^0,7,c
   270  0009A2  EFDB  F004         	goto	u51
   271  0009A6  5006               	movf	(lcd_XY@x+1)^0,w,c
   272  0009A8  E108               	bnz	u50
   273  0009AA  0405               	decf	lcd_XY@x^0,w,c
   274  0009AC  A0D8               	btfss	status,0,c
   275  0009AE  EFDB  F004         	goto	u51
   276  0009B2  EFDD  F004         	goto	u50
   277  0009B6                     u51:
   278  0009B6  EFE3  F004         	goto	l859
   279  0009BA                     u50:
   280  0009BA                     
   281                           ;lcd_libreria.c: 30:         lcd_Comando(0xC0+y);
   282  0009BA  5007               	movf	lcd_XY@y^0,w,c
   283  0009BC  0FC0               	addlw	192
   284  0009BE  EC9E  F004         	call	_lcd_Comando
   285                           
   286                           ;lcd_libreria.c: 31:     }
   287  0009C2  EFE7  F004         	goto	l41
   288  0009C6                     l859:
   289                           
   290                           ;lcd_libreria.c: 33:         lcd_Comando(0x80+y);
   291  0009C6  5007               	movf	lcd_XY@y^0,w,c
   292  0009C8  0F80               	addlw	128
   293  0009CA  EC9E  F004         	call	_lcd_Comando
   294  0009CE                     l41:
   295  0009CE  0012               	return		;funcret
   296  0009D0                     __end_of_lcd_XY:
   297                           	callstack 0
   298                           
   299 ;; *************** function _lcd_Init *****************
   300 ;; Defined at:
   301 ;;		line 4 in file "lcd_libreria.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          1       0       0       0       0       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; Hardware stack levels required when called: 2
   322 ;; This function calls:
   323 ;;		_lcd_Comando
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text2
   330  000870                     __ptext2:
   331                           	callstack 0
   332  000870                     _lcd_Init:
   333                           	callstack 28
   334  000870                     
   335                           ;lcd_libreria.c: 5:     TRISD = 0x00;
   336  000870  0E00               	movlw	0
   337  000872  6E95               	movwf	149,c	;volatile
   338  000874                     
   339                           ;lcd_libreria.c: 6:     _delay((unsigned long)((20)*(20000000UL/4000.0)));
   340  000874  0E82               	movlw	130
   341  000876  6E05               	movwf	??_lcd_Init^0,c
   342  000878  0EDE               	movlw	222
   343  00087A                     u77:
   344  00087A  2EE8               	decfsz	wreg,f,c
   345  00087C  D7FE               	bra	u77
   346  00087E  2E05               	decfsz	??_lcd_Init^0,f,c
   347  000880  D7FC               	bra	u77
   348  000882                     
   349                           ;lcd_libreria.c: 7:     lcd_Comando(0x30);
   350  000882  0E30               	movlw	48
   351  000884  EC9E  F004         	call	_lcd_Comando
   352  000888                     
   353                           ;lcd_libreria.c: 8:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   354  000888  0E21               	movlw	33
   355  00088A  6E05               	movwf	??_lcd_Init^0,c
   356  00088C  0E76               	movlw	118
   357  00088E                     u87:
   358  00088E  2EE8               	decfsz	wreg,f,c
   359  000890  D7FE               	bra	u87
   360  000892  2E05               	decfsz	??_lcd_Init^0,f,c
   361  000894  D7FC               	bra	u87
   362  000896  D000               	nop2	
   363  000898                     
   364                           ;lcd_libreria.c: 9:     lcd_Comando(0x30);
   365  000898  0E30               	movlw	48
   366  00089A  EC9E  F004         	call	_lcd_Comando
   367  00089E                     
   368                           ;lcd_libreria.c: 10:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   369  00089E  0EA6               	movlw	166
   370  0008A0                     u97:
   371  0008A0  2EE8               	decfsz	wreg,f,c
   372  0008A2  D7FE               	bra	u97
   373  0008A4  D000               	nop2	
   374  0008A6                     
   375                           ;lcd_libreria.c: 11:     lcd_Comando(0x32);
   376  0008A6  0E32               	movlw	50
   377  0008A8  EC9E  F004         	call	_lcd_Comando
   378  0008AC                     
   379                           ;lcd_libreria.c: 12:     lcd_Comando(0x28);
   380  0008AC  0E28               	movlw	40
   381  0008AE  EC9E  F004         	call	_lcd_Comando
   382  0008B2                     
   383                           ;lcd_libreria.c: 13:     lcd_Comando(0x0C);
   384  0008B2  0E0C               	movlw	12
   385  0008B4  EC9E  F004         	call	_lcd_Comando
   386  0008B8                     
   387                           ;lcd_libreria.c: 14:     lcd_Comando(0x01);
   388  0008B8  0E01               	movlw	1
   389  0008BA  EC9E  F004         	call	_lcd_Comando
   390  0008BE                     
   391                           ;lcd_libreria.c: 15:     lcd_Comando(0x06);
   392  0008BE  0E06               	movlw	6
   393  0008C0  EC9E  F004         	call	_lcd_Comando
   394  0008C4  0012               	return		;funcret
   395  0008C6                     __end_of_lcd_Init:
   396                           	callstack 0
   397                           
   398 ;; *************** function _lcd_Comando *****************
   399 ;; Defined at:
   400 ;;		line 18 in file "lcd_libreria.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  cmd             1    wreg     unsigned char 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  cmd             1    3[COMRAM] unsigned char 
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         0       0       0       0       0       0       0       0       0
   415 ;;      Locals:         1       0       0       0       0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0
   417 ;;      Totals:         1       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:        1 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; Hardware stack levels required when called: 1
   421 ;; This function calls:
   422 ;;		_selectorRegistro
   423 ;; This function is called by:
   424 ;;		_lcd_Init
   425 ;;		_lcd_XY
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text3
   430  00093C                     __ptext3:
   431                           	callstack 0
   432  00093C                     _lcd_Comando:
   433                           	callstack 28
   434                           
   435                           ;incstack = 0
   436                           ;lcd_Comando@cmd stored from wreg
   437  00093C  6E04               	movwf	lcd_Comando@cmd^0,c
   438  00093E                     
   439                           ;lcd_libreria.c: 20:     LATD &= 0x03;
   440  00093E  0E03               	movlw	3
   441  000940  168C               	andwf	140,f,c	;volatile
   442                           
   443                           ;lcd_libreria.c: 21:     LATD |= (cmd&0xF0);
   444  000942  5004               	movf	lcd_Comando@cmd^0,w,c
   445  000944  0BF0               	andlw	240
   446  000946  128C               	iorwf	140,f,c	;volatile
   447  000948                     
   448                           ;lcd_libreria.c: 22:     selectorRegistro(0);
   449  000948  0E00               	movlw	0
   450  00094A  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   451  00094C  0E00               	movlw	0
   452  00094E  6E01               	movwf	selectorRegistro@rs^0,c
   453  000950  EC63  F004         	call	_selectorRegistro	;wreg free
   454  000954                     
   455                           ;lcd_libreria.c: 23:     LATD &= 0x03;
   456  000954  0E03               	movlw	3
   457  000956  168C               	andwf	140,f,c	;volatile
   458  000958                     
   459                           ;lcd_libreria.c: 24:     LATD |= ((cmd<<4)&0xF0);
   460  000958  3804               	swapf	lcd_Comando@cmd^0,w,c
   461  00095A  0BF0               	andlw	240
   462  00095C  0BF0               	andlw	240
   463  00095E  128C               	iorwf	140,f,c	;volatile
   464  000960                     
   465                           ;lcd_libreria.c: 25:     selectorRegistro(0);
   466  000960  0E00               	movlw	0
   467  000962  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   468  000964  0E00               	movlw	0
   469  000966  6E01               	movwf	selectorRegistro@rs^0,c
   470  000968  EC63  F004         	call	_selectorRegistro	;wreg free
   471  00096C  0012               	return		;funcret
   472  00096E                     __end_of_lcd_Comando:
   473                           	callstack 0
   474                           
   475 ;; *************** function _lcd_Cadena *****************
   476 ;; Defined at:
   477 ;;		line 47 in file "lcd_libreria.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  pal             2    4[COMRAM] PTR unsigned char 
   480 ;;		 -> STR_1(11), 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         2       0       0       0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         2       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 2
   499 ;; This function calls:
   500 ;;		_lcd_Caracter
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text4
   507  000906                     __ptext4:
   508                           	callstack 0
   509  000906                     _lcd_Cadena:
   510                           	callstack 28
   511  000906                     
   512                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   513  000906  EF8F  F004         	goto	l867
   514  00090A                     l863:
   515                           
   516                           ;lcd_libreria.c: 49:         lcd_Caracter(*pal);
   517  00090A  C005  FFF6         	movff	lcd_Cadena@pal,tblptrl
   518  00090E  C006  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   519  000912                     	if	0	;tblptru may be non-zero
   520  000912                     	endif
   521  000912                     	if	0	;tblptru may be non-zero
   522  000912                     	endif
   523  000912  0008               	tblrd		*
   524  000914  50F5               	movf	tablat,w,c
   525  000916  ECB7  F004         	call	_lcd_Caracter
   526  00091A                     
   527                           ;lcd_libreria.c: 50:         pal++;
   528  00091A  4A05               	infsnz	lcd_Cadena@pal^0,f,c
   529  00091C  2A06               	incf	(lcd_Cadena@pal+1)^0,f,c
   530  00091E                     l867:
   531                           
   532                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   533  00091E  C005  FFF6         	movff	lcd_Cadena@pal,tblptrl
   534  000922  C006  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   535  000926                     	if	0	;tblptru may be non-zero
   536  000926                     	endif
   537  000926                     	if	0	;tblptru may be non-zero
   538  000926                     	endif
   539  000926  0008               	tblrd		*
   540  000928  50F5               	movf	tablat,w,c
   541  00092A  0900               	iorlw	0
   542  00092C  A4D8               	btfss	status,2,c
   543  00092E  EF9B  F004         	goto	u61
   544  000932  EF9D  F004         	goto	u60
   545  000936                     u61:
   546  000936  EF85  F004         	goto	l863
   547  00093A                     u60:
   548  00093A  0012               	return		;funcret
   549  00093C                     __end_of_lcd_Cadena:
   550                           	callstack 0
   551                           
   552 ;; *************** function _lcd_Caracter *****************
   553 ;; Defined at:
   554 ;;		line 37 in file "lcd_libreria.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  dat             1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  dat             1    3[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   568 ;;      Params:         0       0       0       0       0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 1
   575 ;; This function calls:
   576 ;;		_selectorRegistro
   577 ;; This function is called by:
   578 ;;		_main
   579 ;;		_lcd_Cadena
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text5
   584  00096E                     __ptext5:
   585                           	callstack 0
   586  00096E                     _lcd_Caracter:
   587                           	callstack 29
   588                           
   589                           ;incstack = 0
   590                           ;lcd_Caracter@dat stored from wreg
   591  00096E  6E04               	movwf	lcd_Caracter@dat^0,c
   592  000970                     
   593                           ;lcd_libreria.c: 38:     LATD &= 0x03;
   594  000970  0E03               	movlw	3
   595  000972  168C               	andwf	140,f,c	;volatile
   596                           
   597                           ;lcd_libreria.c: 39:     LATD |= (dat&0xF0);
   598  000974  5004               	movf	lcd_Caracter@dat^0,w,c
   599  000976  0BF0               	andlw	240
   600  000978  128C               	iorwf	140,f,c	;volatile
   601  00097A                     
   602                           ;lcd_libreria.c: 40:     selectorRegistro(1);
   603  00097A  0E00               	movlw	0
   604  00097C  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   605  00097E  0E01               	movlw	1
   606  000980  6E01               	movwf	selectorRegistro@rs^0,c
   607  000982  EC63  F004         	call	_selectorRegistro	;wreg free
   608  000986                     
   609                           ;lcd_libreria.c: 41:     LATD &= 0x03;
   610  000986  0E03               	movlw	3
   611  000988  168C               	andwf	140,f,c	;volatile
   612  00098A                     
   613                           ;lcd_libreria.c: 42:     LATD |= ((dat<<4)&0xF0);
   614  00098A  3804               	swapf	lcd_Caracter@dat^0,w,c
   615  00098C  0BF0               	andlw	240
   616  00098E  0BF0               	andlw	240
   617  000990  128C               	iorwf	140,f,c	;volatile
   618  000992                     
   619                           ;lcd_libreria.c: 43:     selectorRegistro(1);
   620  000992  0E00               	movlw	0
   621  000994  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   622  000996  0E01               	movlw	1
   623  000998  6E01               	movwf	selectorRegistro@rs^0,c
   624  00099A  EC63  F004         	call	_selectorRegistro	;wreg free
   625  00099E  0012               	return		;funcret
   626  0009A0                     __end_of_lcd_Caracter:
   627                           	callstack 0
   628                           
   629 ;; *************** function _selectorRegistro *****************
   630 ;; Defined at:
   631 ;;		line 54 in file "lcd_libreria.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  rs              2    0[COMRAM] int 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         2       0       0       0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0
   647 ;;      Temps:          1       0       0       0       0       0       0       0       0
   648 ;;      Totals:         3       0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_lcd_Comando
   655 ;;		_lcd_Caracter
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text6
   660  0008C6                     __ptext6:
   661                           	callstack 0
   662  0008C6                     _selectorRegistro:
   663                           	callstack 28
   664  0008C6                     
   665                           ;lcd_libreria.c: 55:     if(rs == 1){
   666  0008C6  0401               	decf	selectorRegistro@rs^0,w,c
   667  0008C8  1002               	iorwf	(selectorRegistro@rs+1)^0,w,c
   668  0008CA  A4D8               	btfss	status,2,c
   669  0008CC  EF6A  F004         	goto	u41
   670  0008D0  EF6C  F004         	goto	u40
   671  0008D4                     u41:
   672  0008D4  EF6F  F004         	goto	l53
   673  0008D8                     u40:
   674  0008D8                     
   675                           ;lcd_libreria.c: 56:         LATDbits.LATD2 = 1;
   676  0008D8  848C               	bsf	140,2,c	;volatile
   677                           
   678                           ;lcd_libreria.c: 57:     }
   679  0008DA  EF70  F004         	goto	l807
   680  0008DE                     l53:
   681                           
   682                           ;lcd_libreria.c: 59:         LATDbits.LATD2 = 0;
   683  0008DE  948C               	bcf	140,2,c	;volatile
   684  0008E0                     l807:
   685                           
   686                           ;lcd_libreria.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   687  0008E0  0E07               	movlw	7
   688  0008E2  6E03               	movwf	??_selectorRegistro^0,c
   689  0008E4  0E7D               	movlw	125
   690  0008E6                     u107:
   691  0008E6  2EE8               	decfsz	wreg,f,c
   692  0008E8  D7FE               	bra	u107
   693  0008EA  2E03               	decfsz	??_selectorRegistro^0,f,c
   694  0008EC  D7FC               	bra	u107
   695  0008EE  F000               	nop	
   696  0008F0                     
   697                           ;lcd_libreria.c: 62:     LATDbits.LATD3 = 1;
   698  0008F0  868C               	bsf	140,3,c	;volatile
   699                           
   700                           ;lcd_libreria.c: 63:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   701  0008F2  0E07               	movlw	7
   702  0008F4  6E03               	movwf	??_selectorRegistro^0,c
   703  0008F6  0E7D               	movlw	125
   704  0008F8                     u117:
   705  0008F8  2EE8               	decfsz	wreg,f,c
   706  0008FA  D7FE               	bra	u117
   707  0008FC  2E03               	decfsz	??_selectorRegistro^0,f,c
   708  0008FE  D7FC               	bra	u117
   709  000900  F000               	nop	
   710  000902                     
   711                           ;lcd_libreria.c: 64:     LATDbits.LATD3 = 0;
   712  000902  968C               	bcf	140,3,c	;volatile
   713  000904  0012               	return		;funcret
   714  000906                     __end_of_selectorRegistro:
   715                           	callstack 0
   716                           
   717                           	psect	rparam
   718  0000                     
   719                           	psect	idloc
   720                           
   721                           ;Config register IDLOC0 @ 0x200000
   722                           ;	unspecified, using default values
   723  200000                     	org	2097152
   724  200000  FF                 	db	255
   725                           
   726                           ;Config register IDLOC1 @ 0x200001
   727                           ;	unspecified, using default values
   728  200001                     	org	2097153
   729  200001  FF                 	db	255
   730                           
   731                           ;Config register IDLOC2 @ 0x200002
   732                           ;	unspecified, using default values
   733  200002                     	org	2097154
   734  200002  FF                 	db	255
   735                           
   736                           ;Config register IDLOC3 @ 0x200003
   737                           ;	unspecified, using default values
   738  200003                     	org	2097155
   739  200003  FF                 	db	255
   740                           
   741                           ;Config register IDLOC4 @ 0x200004
   742                           ;	unspecified, using default values
   743  200004                     	org	2097156
   744  200004  FF                 	db	255
   745                           
   746                           ;Config register IDLOC5 @ 0x200005
   747                           ;	unspecified, using default values
   748  200005                     	org	2097157
   749  200005  FF                 	db	255
   750                           
   751                           ;Config register IDLOC6 @ 0x200006
   752                           ;	unspecified, using default values
   753  200006                     	org	2097158
   754  200006  FF                 	db	255
   755                           
   756                           ;Config register IDLOC7 @ 0x200007
   757                           ;	unspecified, using default values
   758  200007                     	org	2097159
   759  200007  FF                 	db	255
   760                           
   761                           	psect	config
   762                           
   763                           ;Config register CONFIG1L @ 0x300000
   764                           ;	PLL Prescaler Selection bits
   765                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   766                           ;	System Clock Postscaler Selection bits
   767                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   768                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   769                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   770  300000                     	org	3145728
   771  300000  00                 	db	0
   772                           
   773                           ;Config register CONFIG1H @ 0x300001
   774                           ;	Oscillator Selection bits
   775                           ;	FOSC = HS, HS oscillator (HS)
   776                           ;	Fail-Safe Clock Monitor Enable bit
   777                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   778                           ;	Internal/External Oscillator Switchover bit
   779                           ;	IESO = ON, Oscillator Switchover mode enabled
   780  300001                     	org	3145729
   781  300001  8C                 	db	140
   782                           
   783                           ;Config register CONFIG2L @ 0x300002
   784                           ;	Power-up Timer Enable bit
   785                           ;	PWRT = ON, PWRT enabled
   786                           ;	Brown-out Reset Enable bits
   787                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   788                           ;	Brown-out Reset Voltage bits
   789                           ;	BORV = 3, Minimum setting 2.05V
   790                           ;	USB Voltage Regulator Enable bit
   791                           ;	VREGEN = OFF, USB voltage regulator disabled
   792  300002                     	org	3145730
   793  300002  18                 	db	24
   794                           
   795                           ;Config register CONFIG2H @ 0x300003
   796                           ;	Watchdog Timer Enable bit
   797                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   798                           ;	Watchdog Timer Postscale Select bits
   799                           ;	WDTPS = 32768, 1:32768
   800  300003                     	org	3145731
   801  300003  1E                 	db	30
   802                           
   803                           ; Padding undefined space
   804  300004                     	org	3145732
   805  300004  FF                 	db	255
   806                           
   807                           ;Config register CONFIG3H @ 0x300005
   808                           ;	CCP2 MUX bit
   809                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   810                           ;	PORTB A/D Enable bit
   811                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   812                           ;	Low-Power Timer 1 Oscillator Enable bit
   813                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   814                           ;	MCLR Pin Enable bit
   815                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   816  300005                     	org	3145733
   817  300005  81                 	db	129
   818                           
   819                           ;Config register CONFIG4L @ 0x300006
   820                           ;	Stack Full/Underflow Reset Enable bit
   821                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   822                           ;	Single-Supply ICSP Enable bit
   823                           ;	LVP = OFF, Single-Supply ICSP disabled
   824                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   825                           ;	ICPRT = OFF, ICPORT disabled
   826                           ;	Extended Instruction Set Enable bit
   827                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   828                           ;	Background Debugger Enable bit
   829                           ;	DEBUG = 0x1, unprogrammed default
   830  300006                     	org	3145734
   831  300006  80                 	db	128
   832                           
   833                           ; Padding undefined space
   834  300007                     	org	3145735
   835  300007  FF                 	db	255
   836                           
   837                           ;Config register CONFIG5L @ 0x300008
   838                           ;	Code Protection bit
   839                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   840                           ;	Code Protection bit
   841                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   842                           ;	Code Protection bit
   843                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   844                           ;	Code Protection bit
   845                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   846  300008                     	org	3145736
   847  300008  0F                 	db	15
   848                           
   849                           ;Config register CONFIG5H @ 0x300009
   850                           ;	Boot Block Code Protection bit
   851                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   852                           ;	Data EEPROM Code Protection bit
   853                           ;	CPD = OFF, Data EEPROM is not code-protected
   854  300009                     	org	3145737
   855  300009  C0                 	db	192
   856                           
   857                           ;Config register CONFIG6L @ 0x30000A
   858                           ;	Write Protection bit
   859                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   860                           ;	Write Protection bit
   861                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   862                           ;	Write Protection bit
   863                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   864                           ;	Write Protection bit
   865                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   866  30000A                     	org	3145738
   867  30000A  0F                 	db	15
   868                           
   869                           ;Config register CONFIG6H @ 0x30000B
   870                           ;	Configuration Register Write Protection bit
   871                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   872                           ;	Boot Block Write Protection bit
   873                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   874                           ;	Data EEPROM Write Protection bit
   875                           ;	WRTD = OFF, Data EEPROM is not write-protected
   876  30000B                     	org	3145739
   877  30000B  E0                 	db	224
   878                           
   879                           ;Config register CONFIG7L @ 0x30000C
   880                           ;	Table Read Protection bit
   881                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   882                           ;	Table Read Protection bit
   883                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   884                           ;	Table Read Protection bit
   885                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   886                           ;	Table Read Protection bit
   887                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   888  30000C                     	org	3145740
   889  30000C  0F                 	db	15
   890                           
   891                           ;Config register CONFIG7H @ 0x30000D
   892                           ;	Boot Block Table Read Protection bit
   893                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   894  30000D                     	org	3145741
   895  30000D  40                 	db	64
   896                           tosu	equ	0xFFF
   897                           tosh	equ	0xFFE
   898                           tosl	equ	0xFFD
   899                           stkptr	equ	0xFFC
   900                           pclatu	equ	0xFFB
   901                           pclath	equ	0xFFA
   902                           pcl	equ	0xFF9
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           prodh	equ	0xFF4
   908                           prodl	equ	0xFF3
   909                           indf0	equ	0xFEF
   910                           postinc0	equ	0xFEE
   911                           postdec0	equ	0xFED
   912                           preinc0	equ	0xFEC
   913                           plusw0	equ	0xFEB
   914                           fsr0h	equ	0xFEA
   915                           fsr0l	equ	0xFE9
   916                           wreg	equ	0xFE8
   917                           indf1	equ	0xFE7
   918                           postinc1	equ	0xFE6
   919                           postdec1	equ	0xFE5
   920                           preinc1	equ	0xFE4
   921                           plusw1	equ	0xFE3
   922                           fsr1h	equ	0xFE2
   923                           fsr1l	equ	0xFE1
   924                           bsr	equ	0xFE0
   925                           indf2	equ	0xFDF
   926                           postinc2	equ	0xFDE
   927                           postdec2	equ	0xFDD
   928                           preinc2	equ	0xFDC
   929                           plusw2	equ	0xFDB
   930                           fsr2h	equ	0xFDA
   931                           fsr2l	equ	0xFD9
   932                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_Cadena@pal	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_lcd_XY
    _lcd_XY->_lcd_Comando
    _lcd_Init->_lcd_Comando
    _lcd_Comando->_selectorRegistro
    _lcd_Cadena->_lcd_Caracter
    _lcd_Caracter->_selectorRegistro

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2123
                         _lcd_Cadena
                       _lcd_Caracter
                           _lcd_Init
                             _lcd_XY
 ---------------------------------------------------------------------------------
 (1) _lcd_XY                                               4     0      4     892
                                              4 COMRAM     4     0      4
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (1) _lcd_Init                                             1     1      0     370
                                              4 COMRAM     1     1      0
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (2) _lcd_Comando                                          1     1      0     370
                                              3 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (1) _lcd_Cadena                                           2     0      2     491
                                              4 COMRAM     2     0      2
                       _lcd_Caracter
 ---------------------------------------------------------------------------------
 (1) _lcd_Caracter                                         1     1      0     370
                                              3 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (3) _selectorRegistro                                     3     1      2     326
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_Cadena
     _lcd_Caracter
       _selectorRegistro
   _lcd_Caracter
   _lcd_Init
     _lcd_Comando
       _selectorRegistro
   _lcd_XY
     _lcd_Comando

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 29 00:53:25 2021

                       l15 0868                         l16 0868                         l33 08C4  
                       l41 09CE                         l50 093A                         l44 099E  
                       l36 096C                         l53 08DE                         l55 0904  
                       u40 08D8                         u41 08D4                         u50 09BA  
                       u51 09B6                         u60 093A                         u61 0936  
                       u77 087A                         u87 088E                         u97 08A0  
          lcd_Caracter@dat 0004                        l811 0902                        l803 08C6  
                      l805 08D8                        l821 0992                        l813 0970  
                      l807 08E0                        l815 097A                        l831 0960  
                      l823 093E                        l809 08F0                        l817 0986  
                      l825 0948                        l841 0898                        l833 0870  
                      l819 098A                        l827 0954                        l851 08B8  
                      l843 089E                        l835 0874                        l861 0906  
                      l829 0958                        l853 08BE                        l845 08A6  
                      l837 0882                        l863 090A                        l847 08AC  
                      l839 0888                        l855 09A0                        l871 0810  
                      l865 091A                        l849 08B2                        l857 09BA  
                      l873 085C                        l867 091E                        l859 09C6  
                      l869 080E                        u107 08E6                        u117 08F8  
                      wreg 000FE8                       STR_1 0801                       _LATD 000F8C  
                     _main 080E                       start 0000               ___param_bank 000000  
                    ?_main 0001                      _TRISD 000F95                      tablat 000FF5  
                    status 000FD8            __initialization 09D0       __end_of_lcd_Caracter 09A0  
             __end_of_main 0870                     ??_main 0009              __activetblptr 000001  
         _selectorRegistro 08C6       __size_of_lcd_Comando 0032           __end_of_lcd_Init 08C6  
                   _lcd_XY 09A0                     isa$std 000001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 09D0              ___rparam_used 000001  
           __pcstackCOMRAM 0001      __size_of_lcd_Caracter 0032                 _lcd_Cadena 0906  
                  ?_lcd_XY 0005                  ?_lcd_Init 0001               _lcd_Caracter 096E  
                  __Hparam 0000   __end_of_selectorRegistro 0906                    __Lparam 0000  
             __psmallconst 0800            __size_of_lcd_XY 0030                    __pcinit 09D0  
                  __ramtop 0800                    __ptext0 080E                    __ptext1 09A0  
                  __ptext2 0870                    __ptext3 093C                    __ptext4 0906  
                  __ptext5 096E                    __ptext6 08C6                    lcd_XY@x 0005  
                  lcd_XY@y 0007                 ??_lcd_Init 0005       end_of_initialization 09D0  
              ?_lcd_Cadena 0005              ??_lcd_Comando 0004                  _TRISDbits 000F95  
           __end_of_lcd_XY 09D0        start_initialization 09D0        __end_of_lcd_Comando 096E  
      __size_of_lcd_Cadena 0036             lcd_Comando@cmd 0004                   ??_lcd_XY 0009  
        __size_of_lcd_Init 0056          ?_selectorRegistro 0001         ??_selectorRegistro 0003  
              __smallconst 0800                _lcd_Comando 093C                   _LATDbits 000F8C  
            lcd_Cadena@pal 0005               ??_lcd_Cadena 0007         __end_of_lcd_Cadena 093C  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
                 _lcd_Init 0870              __size_of_main 0062                   isa$xinst 000000  
            ?_lcd_Caracter 0001         selectorRegistro@rs 0001               ?_lcd_Comando 0001  
__size_of_selectorRegistro 0040             ??_lcd_Caracter 0004  
